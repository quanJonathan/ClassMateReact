/* eslint-disable prettier/prettier */
import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';
import mongoose, { Document} from 'mongoose';
import { User, UserSchema } from 'src/user/model/user.schema';
import { Homework } from './homework.schema';
import { GradeComposition } from './grade-composition.schema';
export type ClassDocument = Class & Document;


// Note that the classId is for shown only
// the real id is the autoGenerated _id
@Schema()
export class Class {
 @Prop({required:true})
 className: string
 @Prop({required: true})
 classId: string;
 @Prop({ type: [{ type: mongoose.Schema.Types.ObjectId, ref: 'User' }] })
 members: User[];
 @Prop({type: [{type: mongoose.Schema.Types.ObjectId, ref: 'Homework'}]})
 homeworks: Homework[];
 @Prop({unique: true})
 accessLink?: string;
 @Prop({type: [{type: mongoose.Schema.Types.ObjectId, ref: 'GradeComposition'}]})
 compositions: GradeComposition[] | mongoose.Types.ObjectId[];
 @Prop({ type: mongoose.Schema.Types.ObjectId, auto: true })
 _id: mongoose.Types.ObjectId;
 @Prop()
 state?: string; // active and inactive
}

export const ClassSchema = SchemaFactory.createForClass(Class);