/* eslint-disable prettier/prettier */
import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';
import mongoose, { Document, ObjectId } from 'mongoose';
import { Homework } from './homework.schema';
import { User } from 'src/user/model/user.schema';
export type GradeReviewDocument = GradeReview & Document;

// Note that the classId is for shown only
// the real id is the autoGenerated _id
@Schema()
export class GradeReview {

  @Prop({ type: mongoose.Schema.Types.ObjectId, auto: true })
  _id: mongoose.Types.ObjectId;

  @Prop({type: mongoose.Schema.Types.ObjectId, ref: 'Homework'})
  homeWorkId: Homework

  @Prop({type: [{type: mongoose.Schema.Types.ObjectId, ref: 'User'}]})
  user: User[]

  @Prop({required: true})
  studentExplanation: string

  @Prop({ type: [{teacherId: {type: mongoose.Schema.Types.ObjectId, ref: 'User'}, comment: String}], validate: [(val: string[]) => val.every(str => str.length <= 400), 'Each teacherComment must be 400 characters or less'] })
  teacherComment: {teacherId: User, comment: string}[];

  @Prop({type: Number, min: 0, max: 10})
  expectedGrade: number

  // accepted, declined, pending
  @Prop()
  state: string
}

export const GradeReviewSchema = SchemaFactory.createForClass(GradeReview);
