/* eslint-disable prettier/prettier */
import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';
import mongoose, { Document } from 'mongoose';
import { gradingStateEnum } from 'src/enum/gradeState';
import { homeworkStateEnum } from 'src/enum/homeworkState';
export type HomeworkDocument = Homework & Document;

// Note that the classId is for shown only
// the real id is the autoGenerated _id
@Schema()
export class Homework {
  @Prop({ required: true, unique: true })
  name: string;
  @Prop()
  deadline: Date;
  @Prop({ required: true, unique: true })
  classId: { type: mongoose.ObjectId; ref: 'Class' };

  // Each homework can have multiple tasks, each task has a unique score
  // Each homework has a unique title 
  // Each homework can have content or a link to the content.
  @Prop()
  components: [{ title: string, content?: string, link?: string, scorePercentage: {type: number, min: 0, max: 100}}];
  @Prop()
  doneMembers: [{_id: {type: mongoose.ObjectId, ref: 'User'}, totalScore?: {type: number, min: 0, max: 10}
  , updatedScore?: {type: number, min: 0, max: 10}}];

  // active, non-active, overdue
  @Prop({default: homeworkStateEnum.inactive, enum: homeworkStateEnum})
  homeworkState: string;

  // final, pending
  @Prop({default: gradingStateEnum.pending, enum: gradingStateEnum})
  gradingState: string
}

export const HomeworkSchema = SchemaFactory.createForClass(Homework);
