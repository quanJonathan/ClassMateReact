/* eslint-disable prettier/prettier */
import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';
import mongoose, { Document, ObjectId } from 'mongoose';
import { gradingStateEnum } from 'src/enum/gradeState';
import { homeworkStateEnum } from 'src/enum/homeworkState';
import { User } from 'src/user/model/user.schema';
import { Class } from './class.schema';
export type HomeworkDocument = Homework & Document;

// Note that the classId is for shown only
// the real id is the autoGenerated _id
@Schema()
export class Homework {
  @Prop({ required: true, unique: true })
  name: string;
  @Prop()
  deadline: Date;
  @Prop({type: { type: mongoose.Schema.Types.ObjectId, ref: 'Class' }})
  courseId: Class;

  @Prop()
  maxScore: number;

  // Each homework can have multiple tasks, each task has a unique score
  // Each homework has a unique title
  // Each homework can have content or a link to the content.
  @Prop({
    type: [
      {
        title: String,
        content: String,
        link: String,
        scorePercentage: { type: Number, min: 0, max: 100 },
      },
    ],
  })
  components: {
    title: string;
    content: string;
    link: string;
    scorePercentage: number;
  }[];

  @Prop({
    type: [
      {
        memberId: { type: mongoose.Schema.Types.ObjectId, ref: 'User' },
        score: { type: Number, min: 0, max: 10 },
        state: { type: String, enum: Object.values(gradingStateEnum), default: gradingStateEnum.pending },
      },
    ],
  })
  doneMembers: { user: User, score: number, state: string }[];

  // active, non-active, overdue
  @Prop({ default: homeworkStateEnum.inactive, enum: homeworkStateEnum })
  homeworkState: string;
}

export const HomeworkSchema = SchemaFactory.createForClass(Homework);
